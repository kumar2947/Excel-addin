{"version":3,"sources":["useTriggerListboxSlots.js"],"sourcesContent":["import * as React from 'react';\nimport { mergeCallbacks, useId, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { getDropdownActionFromKey, getIndexFromAction } from '../utils/dropdownKeyActions';\n/*\n * useTriggerListboxSlots returns a tuple of trigger/listbox shorthand,\n * with the semantics and event handlers needed for the Combobox and Dropdown components.\n * The element type of the ref should always match the element type used in the trigger shorthand.\n */ export function useTriggerListboxSlots(props, state, ref, triggerSlot, listboxSlot) {\n    const { multiselect } = props;\n    const { activeOption, getCount, getIndexOfId, getOptionAtIndex, ignoreNextBlur, open, selectOption, setActiveOption, setFocusVisible, setHasFocus, setOpen } = state;\n    // handle trigger focus/blur\n    const triggerRef = React.useRef(null);\n    // resolve listbox shorthand props\n    const listboxId = useId('fluent-listbox', listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.id);\n    const listbox = listboxSlot && {\n        id: listboxId,\n        multiselect,\n        tabIndex: undefined,\n        ...listboxSlot\n    };\n    // resolve trigger shorthand props\n    const trigger = {\n        'aria-expanded': open,\n        'aria-activedescendant': open ? activeOption === null || activeOption === void 0 ? void 0 : activeOption.id : undefined,\n        role: 'combobox',\n        ...triggerSlot,\n        // explicitly type the ref as an intersection here to prevent type errors\n        // since the `children` prop has mutually incompatible types between input/button\n        // functionally both ref and triggerRef will always be the same element type\n        ref: useMergedRefs(ref, triggerSlot === null || triggerSlot === void 0 ? void 0 : triggerSlot.ref, triggerRef)\n    };\n    /*\n   * Handle focus when clicking the listbox popup:\n   * 1. Move focus back to the button/input when the listbox is clicked (otherwise it goes to body)\n   * 2. Do not close the listbox on button/input blur when clicking into the listbox\n   */ const listboxOnClick = useEventCallback(mergeCallbacks((event)=>{\n        var _triggerRef_current;\n        (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();\n    }, listbox === null || listbox === void 0 ? void 0 : listbox.onClick));\n    const listboxOnMouseOver = useEventCallback(mergeCallbacks((event)=>{\n        setFocusVisible(false);\n    }, listbox === null || listbox === void 0 ? void 0 : listbox.onMouseOver));\n    const listboxOnMouseDown = useEventCallback(mergeCallbacks((event)=>{\n        ignoreNextBlur.current = true;\n    }, listbox === null || listbox === void 0 ? void 0 : listbox.onMouseDown));\n    // listbox is nullable, only add event handlers if it exists\n    if (listbox) {\n        listbox.onClick = listboxOnClick;\n        listbox.onMouseOver = listboxOnMouseOver;\n        listbox.onMouseDown = listboxOnMouseDown;\n    }\n    // the trigger should open/close the popup on click or blur\n    trigger.onBlur = mergeCallbacks((event)=>{\n        if (!ignoreNextBlur.current) {\n            setOpen(event, false);\n        }\n        ignoreNextBlur.current = false;\n        setHasFocus(false);\n    }, trigger.onBlur);\n    trigger.onClick = mergeCallbacks((event)=>{\n        setOpen(event, !open);\n    }, trigger.onClick);\n    trigger.onFocus = mergeCallbacks((event)=>{\n        setHasFocus(true);\n    }, trigger.onFocus);\n    // handle combobox keyboard interaction\n    trigger.onKeyDown = mergeCallbacks((event)=>{\n        const action = getDropdownActionFromKey(event, {\n            open,\n            multiselect\n        });\n        const maxIndex = getCount() - 1;\n        const activeIndex = activeOption ? getIndexOfId(activeOption.id) : -1;\n        let newIndex = activeIndex;\n        switch(action){\n            case 'Open':\n                event.preventDefault();\n                setFocusVisible(true);\n                setOpen(event, true);\n                break;\n            case 'Close':\n                // stop propagation for escape key to avoid dismissing any parent popups\n                event.stopPropagation();\n                event.preventDefault();\n                setOpen(event, false);\n                break;\n            case 'CloseSelect':\n                !multiselect && !(activeOption === null || activeOption === void 0 ? void 0 : activeOption.disabled) && setOpen(event, false);\n            // fallthrough\n            case 'Select':\n                activeOption && selectOption(event, activeOption);\n                event.preventDefault();\n                break;\n            case 'Tab':\n                !multiselect && activeOption && selectOption(event, activeOption);\n                break;\n            default:\n                newIndex = getIndexFromAction(action, activeIndex, maxIndex);\n        }\n        if (newIndex !== activeIndex) {\n            // prevent default page scroll/keyboard action if the index changed\n            event.preventDefault();\n            setActiveOption(getOptionAtIndex(newIndex));\n            setFocusVisible(true);\n        }\n    }, trigger.onKeyDown);\n    trigger.onMouseOver = mergeCallbacks((event)=>{\n        setFocusVisible(false);\n    }, trigger.onMouseOver);\n    return [\n        trigger,\n        listbox\n    ];\n}\n"],"names":["useTriggerListboxSlots","props","state","ref","triggerSlot","listboxSlot","multiselect","activeOption","getCount","getIndexOfId","getOptionAtIndex","ignoreNextBlur","open","selectOption","setActiveOption","setFocusVisible","setHasFocus","setOpen","triggerRef","React","useRef","listboxId","useId","id","listbox","tabIndex","undefined","trigger","role","useMergedRefs","listboxOnClick","useEventCallback","mergeCallbacks","event","_triggerRef_current","current","focus","onClick","listboxOnMouseOver","onMouseOver","listboxOnMouseDown","onMouseDown","onBlur","onFocus","onKeyDown","action","getDropdownActionFromKey","maxIndex","activeIndex","newIndex","preventDefault","stopPropagation","disabled","getIndexFromAction"],"mappings":"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"}