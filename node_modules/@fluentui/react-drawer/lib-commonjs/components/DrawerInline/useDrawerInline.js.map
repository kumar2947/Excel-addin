{"version":3,"sources":["useDrawerInline.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useMotion } from '@fluentui/react-motion-preview';\nimport { useDrawerDefaultProps } from '../../shared/useDrawerDefaultProps';\n/**\n * Create the state required to render DrawerInline.\n *\n * The returned state can be modified with hooks such as useDrawerInlineStyles_unstable,\n * before being passed to renderDrawerInline_unstable.\n *\n * @param props - props from this instance of DrawerInline\n * @param ref - reference to root HTMLElement of DrawerInline\n */ export const useDrawerInline_unstable = (props, ref)=>{\n    const { size, position, open } = useDrawerDefaultProps(props);\n    const { separator = false } = props;\n    const motion = useMotion(open);\n    return {\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            ...props,\n            ref: useMergedRefs(ref, motion.ref)\n        }), {\n            elementType: 'div'\n        }),\n        size,\n        position,\n        separator,\n        motion\n    };\n};\n"],"names":["useDrawerInline_unstable","props","ref","size","position","open","useDrawerDefaultProps","separator","motion","useMotion","components","root","slot","always","getIntrinsicElementProps","useMergedRefs","elementType"],"mappings":";;;;+BAYiBA;;;eAAAA;;;;iEAZM;gCACuC;oCACpC;uCACY;AAS3B,MAAMA,2BAA2B,CAACC,OAAOC;IAChD,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAE,GAAGC,IAAAA,4CAAqB,EAACL;IACvD,MAAM,EAAEM,YAAY,KAAK,EAAE,GAAGN;IAC9B,MAAMO,SAASC,IAAAA,6BAAS,EAACJ;IACzB,OAAO;QACHK,YAAY;YACRC,MAAM;QACV;QACAA,MAAMC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,OAAO;YAC9C,GAAGb,KAAK;YACRC,KAAKa,IAAAA,6BAAa,EAACb,KAAKM,OAAON,GAAG;QACtC,IAAI;YACAc,aAAa;QACjB;QACAb;QACAC;QACAG;QACAC;IACJ;AACJ"}